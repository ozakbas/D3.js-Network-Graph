{"version":3,"sources":["NetworkChart.js","App.js","reportWebVitals.js","index.js"],"names":["NetworkChart","data","useEffect","chart","d3","attr","append","tooltip","html","simulation","force","distance","d","w","weight","strength","radius","width","height","link","selectAll","links","enter","style","node","nodes","name","call","on","e","active","alphaTarget","restart","fx","x","fy","y","pageX","pageY","process","this","remove","text","source","target","className","App","raw","RawData","characters","count","forEach","element","index","Source","Target","includes","push","id","createNodes","lines","sourceElement","find","targetElement","createLinks","finalData","mergeData","setData","setIsLoaded","useState","isLoaded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66f0fce7.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nfunction NetworkChart({ data }) {\r\n  useEffect(() => {\r\n    const width = 1680;\r\n    const height = 800;\r\n\r\n    /*\r\n\r\n    const zoom = d3.zoom().on(\"zoom\", zoom_function);\r\n\r\n    function zoom_function(e) {\r\n      var transform = e.transform;\r\n      root.style(\"transform\", \"translate(0px,0px) scale(\" + transform.k + \")\");\r\n    }\r\n\r\n    const root = d3.select(\".chartContainer\").call(zoom);\r\n    */\r\n\r\n    //Initializing chart\r\n    const chart = d3\r\n      .select(\".chart\")\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n      .append(\"g\");\r\n\r\n    //Creating tooltip\r\n    const tooltip = d3\r\n      .select(\".container\")\r\n      .append(\"div\")\r\n      .attr(\"class\", \"tooltip\")\r\n      .html(\"Tooltip\");\r\n\r\n    //Initializing force simulation\r\n    const simulation = d3\r\n      .forceSimulation()\r\n      .force(\r\n        \"link\",\r\n        d3\r\n          .forceLink()\r\n          .distance(function (d) {\r\n            let w = d.weight;\r\n            if (w > 1 && w <= 50) return 270;\r\n            else if (w > 50 && w <= 200) return 250;\r\n            else if (w > 200) return 200;\r\n          })\r\n          .strength(0.3)\r\n      )\r\n      .force(\"forceX\", d3.forceX().strength(0.1))\r\n      .force(\"forceY\", d3.forceY().strength(0.4))\r\n      .force(\"charge\", d3.forceManyBody().strength(-800))\r\n      .force(\"collide\", d3.forceCollide().strength(0.5).radius(30))\r\n      .force(\"center\", d3.forceCenter(width / 2, height / 2))\r\n      .force(\"y\", d3.forceY(0))\r\n      .force(\"x\", d3.forceX(0));\r\n\r\n    //Drag functions\r\n    const dragStart = (e, d) => {\r\n      if (!e.active) simulation.alphaTarget(0.1).restart();\r\n      d.fx = d.x;\r\n      d.fy = d.y;\r\n    };\r\n\r\n    const drag = (e, d) => {\r\n      d.fx = e.x;\r\n      d.fy = e.y;\r\n    };\r\n\r\n    const dragEnd = (e, d) => {\r\n      if (!e.active) simulation.alphaTarget(0);\r\n      d.fx = null;\r\n      d.fy = null;\r\n    };\r\n\r\n    //Creating links\r\n    const link = chart\r\n      .append(\"g\")\r\n      .attr(\"class\", \"links\")\r\n      .selectAll(\"line\")\r\n      .data(data.links)\r\n      .enter()\r\n      .append(\"line\")\r\n      .attr(\"stroke-width\", function (d) {\r\n        return d.weight / 20 + 1;\r\n      })\r\n      .style(\"stroke\", function (d) {\r\n        return `rgba(0, ${d.weight * 5}, 0,  ${d.weight / 25})`;\r\n      })\r\n      .style(\"opacity\", 0.2);\r\n\r\n    //Creating nodes\r\n    const node = d3\r\n      .select(\".chartContainer\")\r\n      .selectAll(\"div\")\r\n      .data(data.nodes)\r\n      .enter()\r\n      .append(\"div\")\r\n      .attr(\"class\", (d) => {\r\n        return \"node node-\" + d.name;\r\n      })\r\n      .call(\r\n        d3.drag().on(\"start\", dragStart).on(\"drag\", drag).on(\"end\", dragEnd)\r\n      )\r\n      .on(\"mouseover\", (e, d) => {\r\n        tooltip\r\n          .html(d.name)\r\n          .style(\"left\", e.pageX + 5 + \"px\")\r\n          .style(\"top\", e.pageY + 5 + \"px\")\r\n          .style(\"opacity\", 0.8);\r\n      })\r\n      .on(\"mouseout\", () => {\r\n        tooltip.style(\"opacity\", 0).style(\"left\", \"0px\").style(\"top\", \"0px\");\r\n      });\r\n\r\n    //domElement.append('img').attr('src', imagePath);\r\n\r\n    // Append images\r\n    node\r\n      .append(\"img\")\r\n      .attr(\"class\", \"img\")\r\n      .attr(\"src\", function (d) {\r\n        let path = `/resized-images/${d.name}.jpg`;\r\n        return process.env.PUBLIC_URL + path;\r\n      })\r\n\r\n      .attr(\"height\", 60)\r\n      .attr(\"width\", 60)\r\n      .on(\"error\", function () {\r\n        d3.select(this).remove();\r\n      });\r\n    node\r\n      .append(\"text\")\r\n      .text(function (d) {\r\n        return d.name;\r\n      })\r\n      .style(\"font-size\", \"12px\")\r\n      .style(\"color\", \"#212121\")\r\n      .style(\"font-weight\", \"600\");\r\n\r\n    //Setting location when ticked\r\n    const ticked = () => {\r\n      link\r\n        .attr(\"x1\", (d) => {\r\n          return d.source.x;\r\n        })\r\n        .attr(\"y1\", (d) => {\r\n          return d.source.y;\r\n        })\r\n        .attr(\"x2\", (d) => {\r\n          return d.target.x;\r\n        })\r\n        .attr(\"y2\", (d) => {\r\n          return d.target.y;\r\n        });\r\n\r\n      node.attr(\"style\", (d) => {\r\n        return \"left: \" + d.x + \"px; top: \" + (d.y + 72) + \"px\";\r\n      });\r\n    };\r\n\r\n    //Starting simulation\r\n    simulation.nodes(data.nodes).on(\"tick\", ticked);\r\n\r\n    simulation.force(\"link\").links(data.links);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Book 1 Network</h1>\r\n      <div className=\"chartContainer\">\r\n        <svg className=\"chart\"></svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NetworkChart;\r\n","import { useEffect, useState } from \"react\";\nimport NetworkChart from \"./NetworkChart\";\nimport RawData from \"./book1.json\";\nimport \"./App.css\";\n\nfunction createLinks(nodes, raw) {\n  let lines = [];\n\n  raw.forEach((element) => {\n    let source = element.Source;\n    let target = element.Target;\n\n    let sourceElement = nodes.find((element) => element.name === source);\n    let targetElement = nodes.find((element) => element.name === target);\n\n    lines.push({\n      source: sourceElement.id,\n      target: targetElement.id,\n      weight: element.weight,\n    });\n  });\n\n  return lines;\n}\n\nfunction createNodes(raw) {\n  let characters = [];\n  let nodes = [];\n  let count = 0;\n\n  raw.forEach((element, index) => {\n    let source = element.Source;\n    let target = element.Target;\n\n    if (!characters.includes(source)) {\n      characters.push(source);\n      nodes.push({ id: count, name: source });\n      count += 1;\n    }\n\n    if (!characters.includes(target)) {\n      characters.push(target);\n      nodes.push({ id: count, name: target });\n      count += 1;\n    }\n  });\n\n  return nodes;\n}\n\nfunction mergeData(nodes, links) {\n  let data = { nodes: nodes, links: links };\n  return data;\n}\n\nfunction App() {\n  useEffect(() => {\n    let raw = RawData;\n    let nodes = createNodes(raw);\n    let links = createLinks(nodes, raw);\n\n    let finalData = mergeData(nodes, links);\n\n    setData(finalData);\n\n    setIsLoaded(true);\n  }, []);\n\n  const [data, setData] = useState({});\n\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  return isLoaded && <NetworkChart data={data} />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}