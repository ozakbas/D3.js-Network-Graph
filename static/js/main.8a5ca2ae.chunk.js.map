{"version":3,"sources":["NetworkChart.js","App.js","reportWebVitals.js","index.js"],"names":["NetworkChart","data","useState","selectedCharacter","setSelectedCharacter","initSmallGraphData","person","new_nodes","new_links","links","forEach","element","source","target","name","includes","push","id","personObject","sourceElement","find","targetElement","weight","nodes","initializeGraph","svgClass","width","height","console","log","chart","d3","attr","append","tooltip","html","simulation","force","distance","d","w","strength","radius","link","selectAll","enter","style","node","call","on","e","active","alphaTarget","restart","fx","x","fy","y","pageX","pageY","remove","document","querySelectorAll","el","smallChart","simulation2","process","this","text","initializeSmallGraph","useEffect","className","App","raw","RawData","characters","count","index","Source","Target","createNodes","lines","createLinks","finalData","mergeData","setData","setIsLoaded","isLoaded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8a5ca2ae.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nfunction NetworkChart({ data }) {\r\n  const [selectedCharacter, setSelectedCharacter] = useState(\r\n    \"Click on any node to see the individual interactions\"\r\n  );\r\n\r\n  function initSmallGraphData(person) {\r\n    let new_nodes = [];\r\n    let new_links = [];\r\n    const links = data.links;\r\n\r\n    // create nodes\r\n    links.forEach((element) => {\r\n      let source = element.source;\r\n      let target = element.target;\r\n\r\n      if (person.name === source.name && !new_nodes.includes(source)) {\r\n        new_nodes.push({ id: target.id, name: target.name });\r\n      } else if (person.name === target.name && !new_nodes.includes(target)) {\r\n        new_nodes.push({ id: source.id, name: source.name });\r\n      }\r\n    });\r\n\r\n    let personObject = { id: person.id, name: person.name };\r\n    if (!new_nodes.includes(personObject)) {\r\n      new_nodes.push(personObject);\r\n    }\r\n\r\n    links.forEach((element) => {\r\n      let source = element.source;\r\n      let target = element.target;\r\n\r\n      if (person.name === source.name || person.name === target.name) {\r\n        let sourceElement = new_nodes.find(\r\n          (element) => element.name === source.name\r\n        );\r\n        let targetElement = new_nodes.find(\r\n          (element) => element.name === target.name\r\n        );\r\n\r\n        const sourceObject = { id: sourceElement.id, name: sourceElement.name };\r\n        const targetObject = { id: targetElement.id, name: targetElement.name };\r\n\r\n        new_links.push({\r\n          source: sourceElement,\r\n          target: targetElement,\r\n          weight: element.weight,\r\n        });\r\n      }\r\n    });\r\n\r\n    const new_data = { nodes: new_nodes, links: new_links };\r\n\r\n    return new_data;\r\n  }\r\n\r\n  function initializeSmallGraph(data, svgClass, width, height) {\r\n    console.log(\"small graph data\", data);\r\n\r\n    //Initializing chart\r\n    const previousSmallChart = d3.select(svgClass);\r\n    previousSmallChart.selectAll(\"g\").remove();\r\n\r\n    const removeElements = (elms) => elms.forEach((el) => el.remove());\r\n    removeElements(document.querySelectorAll(\".node2\"));\r\n\r\n    const smallChart = d3\r\n      .select(svgClass)\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n      .append(\"g\");\r\n\r\n    //Initializing force simulation\r\n    const simulation2 = d3\r\n      .forceSimulation()\r\n      .force(\"link\", d3.forceLink())\r\n      .force(\"forceX\", d3.forceX().strength(0.1))\r\n      .force(\"forceY\", d3.forceY().strength(0.4))\r\n      .force(\"charge\", d3.forceManyBody().strength(-800))\r\n      .force(\"collide\", d3.forceCollide().strength(0.5).radius(60))\r\n      .force(\"center\", d3.forceCenter(width / 2, height / 2))\r\n      .force(\"y\", d3.forceY(0))\r\n      .force(\"x\", d3.forceX(0));\r\n\r\n    //Drag functions\r\n    const dragStart = (e, d) => {\r\n      if (!e.active) simulation2.alphaTarget(0.1).restart();\r\n      d.fx = d.x;\r\n      d.fy = d.y;\r\n    };\r\n\r\n    const drag = (e, d) => {\r\n      d.fx = e.x;\r\n      d.fy = e.y;\r\n    };\r\n\r\n    const dragEnd = (e, d) => {\r\n      if (!e.active) simulation2.alphaTarget(0);\r\n      d.fx = null;\r\n      d.fy = null;\r\n    };\r\n\r\n    //Creating links\r\n    const link = smallChart\r\n      .append(\"g\")\r\n      .attr(\"class\", \"links2\")\r\n      .selectAll(\"line\")\r\n      .data(data.links)\r\n      .enter()\r\n      .append(\"line\")\r\n      .attr(\"stroke-width\", function (d) {\r\n        return d.weight / 10 + 1;\r\n      })\r\n      .style(\"stroke\", function (d) {\r\n        return `rgb(0, ${d.weight * 5}, 0)`;\r\n      })\r\n      .style(\"opacity\", 0.3);\r\n\r\n    //Creating nodes\r\n    const node = d3\r\n      .select(\".smallChartContainer\")\r\n      .selectAll(\"div\")\r\n      .data(data.nodes)\r\n      .enter()\r\n      .append(\"div\")\r\n      .attr(\"class\", (d) => {\r\n        return \"node2 node-\" + d.name + \"2\";\r\n      })\r\n      .call(\r\n        d3.drag().on(\"start\", dragStart).on(\"drag\", drag).on(\"end\", dragEnd)\r\n      );\r\n\r\n    // Append images\r\n    node\r\n      .append(\"img\")\r\n      .attr(\"class\", \"img2\")\r\n      .attr(\"src\", function (d) {\r\n        let path = `/resized-images/${d.name}.jpg`;\r\n        return process.env.PUBLIC_URL + path;\r\n      })\r\n\r\n      .attr(\"height\", 80)\r\n      .attr(\"width\", 80)\r\n      .on(\"error\", function () {\r\n        d3.select(this).remove();\r\n      });\r\n    node\r\n      .append(\"text\")\r\n      .text(function (d) {\r\n        return d.name;\r\n      })\r\n      .style(\"font-size\", \"16px\")\r\n      .style(\"color\", \"#212121\")\r\n      .style(\"font-weight\", \"600\");\r\n\r\n    //Setting location when ticked\r\n    const ticked = () => {\r\n      link\r\n        .attr(\"x1\", (d) => {\r\n          return d.source.x;\r\n        })\r\n        .attr(\"y1\", (d) => {\r\n          return d.source.y;\r\n        })\r\n        .attr(\"x2\", (d) => {\r\n          return d.target.x;\r\n        })\r\n        .attr(\"y2\", (d) => {\r\n          return d.target.y;\r\n        });\r\n\r\n      node.attr(\"style\", (d) => {\r\n        return \"left: \" + d.x + \"px; top: \" + (d.y + 0) + \"px\";\r\n      });\r\n    };\r\n\r\n    //Starting simulation2\r\n    simulation2.nodes(data.nodes).on(\"tick\", ticked);\r\n\r\n    simulation2.force(\"link\").links(data.links);\r\n  }\r\n\r\n  function initializeGraph(data, svgClass, width, height) {\r\n    console.log(\"big graph data:\", data);\r\n    //Initializing chart\r\n    const chart = d3\r\n      .select(svgClass) //.chart\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n      .append(\"g\");\r\n\r\n    const tooltip = d3\r\n      .select(\".container\")\r\n      .append(\"div\")\r\n      .attr(\"class\", \"tooltip\")\r\n      .html(\"Tooltip\");\r\n\r\n    //Initializing force simulation\r\n    const simulation = d3\r\n      .forceSimulation()\r\n      .force(\r\n        \"link\",\r\n        d3\r\n          .forceLink()\r\n          .distance(function (d) {\r\n            let w = d.weight;\r\n            if (w > 1 && w <= 50) return 270;\r\n            else if (w > 50 && w <= 200) return 250;\r\n            else if (w > 200) return 200;\r\n          })\r\n          .strength(0.3)\r\n      )\r\n      .force(\"forceX\", d3.forceX().strength(0.1))\r\n      .force(\"forceY\", d3.forceY().strength(0.4))\r\n      .force(\"charge\", d3.forceManyBody().strength(-800))\r\n      .force(\"collide\", d3.forceCollide().strength(0.5).radius(30))\r\n      .force(\"center\", d3.forceCenter(width / 2, height / 2))\r\n      .force(\"y\", d3.forceY(0))\r\n      .force(\"x\", d3.forceX(0));\r\n\r\n    //Drag functions\r\n    const dragStart = (e, d) => {\r\n      if (!e.active) simulation.alphaTarget(0.1).restart();\r\n      d.fx = d.x;\r\n      d.fy = d.y;\r\n    };\r\n\r\n    const drag = (e, d) => {\r\n      d.fx = e.x;\r\n      d.fy = e.y;\r\n    };\r\n\r\n    const dragEnd = (e, d) => {\r\n      if (!e.active) simulation.alphaTarget(0);\r\n      d.fx = null;\r\n      d.fy = null;\r\n    };\r\n\r\n    //Creating links\r\n    const link = chart\r\n      .append(\"g\")\r\n      .attr(\"class\", \"links\")\r\n      .selectAll(\"line\")\r\n      .data(data.links)\r\n      .enter()\r\n      .append(\"line\")\r\n      .attr(\"stroke-width\", function (d) {\r\n        return d.weight / 20 + 1;\r\n      })\r\n      .style(\"stroke\", function (d) {\r\n        return `rgba(0, ${d.weight * 5}, 0,  ${d.weight / 25})`;\r\n      })\r\n      .style(\"opacity\", 0.2);\r\n\r\n    //Creating nodes\r\n    const node = d3\r\n      .select(\".chartContainer\")\r\n      .selectAll(\"div\")\r\n      .data(data.nodes)\r\n      .enter()\r\n      .append(\"div\")\r\n      .attr(\"class\", (d) => {\r\n        return \"node node-\" + d.name;\r\n      })\r\n      .call(\r\n        d3.drag().on(\"start\", dragStart).on(\"drag\", drag).on(\"end\", dragEnd)\r\n      )\r\n      .on(\"mouseover\", (e, d) => {\r\n        tooltip\r\n          .html(d.name)\r\n          .style(\"left\", e.pageX + 5 + \"px\")\r\n          .style(\"top\", e.pageY + 5 + \"px\")\r\n          .style(\"opacity\", 0.8);\r\n      })\r\n      .on(\"mouseout\", () => {\r\n        tooltip.style(\"opacity\", 0).style(\"left\", \"0px\").style(\"top\", \"0px\");\r\n      })\r\n      .on(\"click\", function (e, d) {\r\n        setSelectedCharacter(d.name);\r\n        const new_data = initSmallGraphData(d);\r\n        initializeSmallGraph(new_data, \".smallChart\", 600, 400);\r\n      });\r\n\r\n    // Append images\r\n    node\r\n      .append(\"img\")\r\n      .attr(\"class\", \"img\")\r\n      .attr(\"src\", function (d) {\r\n        let path = `/resized-images/${d.name}.jpg`;\r\n        return process.env.PUBLIC_URL + path;\r\n      })\r\n\r\n      .attr(\"height\", 60)\r\n      .attr(\"width\", 60)\r\n      .on(\"error\", function () {\r\n        d3.select(this).remove();\r\n      });\r\n    node\r\n      .append(\"text\")\r\n      .text(function (d) {\r\n        return d.name;\r\n      })\r\n      .style(\"font-size\", \"12px\")\r\n      .style(\"color\", \"#212121\")\r\n      .style(\"font-weight\", \"600\");\r\n\r\n    //Setting location when ticked\r\n    const ticked = () => {\r\n      link\r\n        .attr(\"x1\", (d) => {\r\n          return d.source.x;\r\n        })\r\n        .attr(\"y1\", (d) => {\r\n          return d.source.y;\r\n        })\r\n        .attr(\"x2\", (d) => {\r\n          return d.target.x;\r\n        })\r\n        .attr(\"y2\", (d) => {\r\n          return d.target.y;\r\n        });\r\n\r\n      node.attr(\"style\", (d) => {\r\n        return \"left: \" + d.x + \"px; top: \" + (d.y + 72) + \"px\";\r\n      });\r\n    };\r\n\r\n    //Starting simulation\r\n    simulation.nodes(data.nodes).on(\"tick\", ticked);\r\n\r\n    simulation.force(\"link\").links(data.links);\r\n  }\r\n\r\n  useEffect(() => {\r\n    initializeGraph(data, \".chart\", 1680, 800);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Book 1 Network</h1>\r\n      <div className=\"chartContainer\">\r\n        <svg className=\"chart\"></svg>\r\n      </div>\r\n      <div className=\"tv\">\r\n        <h1>{selectedCharacter}</h1>\r\n        <div className=\"smallChartContainer\">\r\n          <svg className=\"smallChart\"></svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NetworkChart;\r\n","import { useEffect, useState } from \"react\";\nimport NetworkChart from \"./NetworkChart\";\nimport RawData from \"./book1.json\";\nimport \"./App.css\";\n\nfunction createLinks(nodes, raw) {\n  let lines = [];\n\n  raw.forEach((element) => {\n    let source = element.Source;\n    let target = element.Target;\n\n    let sourceElement = nodes.find((element) => element.name === source);\n    let targetElement = nodes.find((element) => element.name === target);\n\n    lines.push({\n      source: sourceElement.id,\n      target: targetElement.id,\n      weight: element.weight,\n    });\n  });\n\n  return lines;\n}\n\nfunction createNodes(raw) {\n  let characters = [];\n  let nodes = [];\n  let count = 0;\n\n  raw.forEach((element, index) => {\n    let source = element.Source;\n    let target = element.Target;\n\n    if (!characters.includes(source)) {\n      characters.push(source);\n      nodes.push({ id: count, name: source });\n      count += 1;\n    }\n\n    if (!characters.includes(target)) {\n      characters.push(target);\n      nodes.push({ id: count, name: target });\n      count += 1;\n    }\n  });\n\n  return nodes;\n}\n\nfunction mergeData(nodes, links) {\n  let data = { nodes: nodes, links: links };\n  return data;\n}\n\nfunction App() {\n  useEffect(() => {\n    let raw = RawData;\n    let nodes = createNodes(raw);\n    let links = createLinks(nodes, raw);\n\n    let finalData = mergeData(nodes, links);\n\n    setData(finalData);\n    console.log(data);\n\n    setIsLoaded(true);\n  }, []);\n\n  const [data, setData] = useState({});\n\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  return isLoaded && <NetworkChart data={data} />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}